name: release
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_PREFIX: ${{ steps.get-package_prefix.outputs.PACKAGE_PREFIX }}
      TAG_NAME: ${{ steps.get-package_prefix.outputs.TAG_NAME }}
      HEAD_SHA_SHORT: ${{ steps.get-package_prefix.outputs.HEAD_SHA_SHORT }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          tags: true
      - name: get-package_prefix
        id: get-package_prefix
        run: |
          LIB_NAME=bika
          TAG_NAME=$(git describe --abbrev=0 --tags)
          HEAD_SHA_SHORT=$(git rev-parse --short HEAD)
          echo "::set-output name=PACKAGE_PREFIX::${LIB_NAME}_${TAG_NAME}"
          echo "::set-output name=TAG_NAME::${TAG_NAME}"
          echo "::set-output name=HEAD_SHA_SHORT::${HEAD_SHA_SHORT}"

  release:
    needs: [setup]
    runs-on: ubuntu-latest
    outputs:
      Up_Url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: create_release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.setup.outputs.TAG_NAME }}
          release_name: ${{ needs.setup.outputs.TAG_NAME }}
          draft: true
          prerelease: true

  linux-arm-nosr:
    needs: [setup, release]
    runs-on: ubuntu-24.04-arm
    env:
      PACKAGENAME: ${{ needs.setup.outputs.PACKAGE_PREFIX }}_linux_nosr_arm64
      BINARY_NAME: bika
    steps:
      - uses: actions/checkout@v4
      - name: Build with Nuitka
        run: |
          docker run --rm --platform linux/arm64 \
            -v "$PWD":/workspace -w /workspace/src \
            cyberspace0000/linux-arm-py10 sh -exc '
              source /opt/miniforge/bin/activate
              conda activate py310
              pip3 install --upgrade nuitka
              UPX_VER=5.0.1
              curl -L -o /tmp/upx.tar.xz \
                "https://github.com/upx/upx/releases/download/v${UPX_VER}/upx-${UPX_VER}-aarch64_linux.tar.xz"
              mkdir -p /tmp/upx
              tar -xf /tmp/upx.tar.xz -C /tmp/upx --strip-components=1
              export UPX_BIN=/tmp/upx/upx
              chmod +x "$UPX_BIN"
              grep -v -i "^pyside6" requirements.txt > /tmp/requirements.txt
              pip3 install -r /tmp/requirements.txt
              mkdir -p db
              curl -L -o db/book.db \
                   https://github.com/bika-robot/picacg-database/releases/download/v1.5.3/book.db
              nuitka start.py \
                --onefile --output-dir=dist --static-libpython=yes \
                --plugin-enable=pyside6 \
                --plugin-enable=upx --upx-binary="$UPX_BIN" \
                --assume-yes-for-downloads \
                --linux-icon=../res/icon/icon.ico
              mkdir -p /workspace/out
              mv dist/start.bin "/workspace/out/${BINARY_NAME}/start"
              cp -r db             /workspace/out/
              cp ../LICENSE        /workspace/out/
              cp ../CHANGELOG      /workspace/out/
              chown -R 1001:1001   /workspace
            '
      - name: Create 7z archive
        run: |
          rm -rf src/dist src/*.onefile-build
          mkdir package
          mv out package/bika
          cd package
          7z a -t7z -r "${{ env.PACKAGENAME }}.7z" bika
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGENAME }}
          path: ${{ env.PACKAGENAME }}.7z

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:         ${{ needs.release.outputs.Up_Url }}
          asset_path:         ${{ env.PACKAGENAME }}.7z
          asset_name:         ${{ env.PACKAGENAME }}.7z
          asset_content_type: application/zip
